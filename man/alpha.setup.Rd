% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alpha_update.R
\name{alpha.setup}
\alias{alpha.setup}
\title{Alpha control}
\usage{
alpha.setup(
  Cmat = NULL,
  alpha.start = NULL,
  init.type = "regression",
  norm.type = "L2",
  solver = "osqp",
  qp_pars = list()
)
}
\arguments{
\item{Cmat}{Overall constraint matrix for alpha coefficients.
Number of columns must match the total number of alpha coefficients. 
Common constraints can be given in the formula through \code{\link{g}}.}

\item{alpha.start}{A vector or list of starting alpha values. If \code{NULL},
staring values are generated internally.}

\item{init.type}{If \code{alpha.start = NULL}, the type of starting values
to generate. If \code{init.type = "regression"} (the default), the
starting values are generated by regressing the index design matrix on
the response. If \code{init.type = "random"}, the starting values are
generated randomly, ensuring they fall in the feasible region. In the
latter case, it might be wise to estimate the model several times with
different starting values to keep the best fit.}

\item{norm.type}{A character giving the type of normalization applied on
each alpha_j vector for it to have norm 1. One of \code{"L2"} (the default)
for classical euclidean norm, \code{"L1"} for absolute norm and 
\code{"sum"} for the simple sum.}

\item{solver}{The quadratic programming solver to use. Either 
\code{"osqp"} (the default) (see \code{\link[osqp:solve_osqp]{solve_osqp}}) 
or \code{"quadprog"} (\code{\link[quadprog:solve.QP]{solve.QP}})}

\item{qp_pars}{A named list of parameters to be passed to the QP function.
See help pages for the corresponding functions.}
}
\description{
Internal function setting up the control of alpha coefficients estimation
 Use this as a comprehensive list of allowed parameters for the 
 \code{alpha.control} argument in \code{\link{cgaim}}.
}
