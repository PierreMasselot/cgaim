% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aim.R
\name{cgaim}
\alias{cgaim}
\title{Constrained groupwise additive index models}
\usage{
cgaim(formula, data, weights, na.action, smooth_method = c("scam", "cgam",
  "scar"), smooth.control = list(), alpha.control = list(),
  algo.control = list(), keep.trace = F)
}
\arguments{
\item{formula}{A CGAIM formula with index terms \code{\link{g}}, 
smooth terms \code{\link{s}} and linear terms.}

\item{data}{A data.frame containing the variables of the model.}

\item{weights}{A vector of optional weights for observations. If \code{NULL}, unit weights are considered.}

\item{na.action}{A function indicating what treatment applying to NAs. If
missing the default is set by the \code{na.action} setting of \code{options}. See
\code{\link[stats]{na.fail}}.}

\item{smooth_method}{The shape constrained smoothing method to consider. The default is \code{\link[scam]{scam}}, but other options are \code{\link[cgam]{cgam}} and \code{\link[scar]{scar}}. See details.}

\item{smooth.control}{A list containing parameters for the shape-contrained smoothing function given passed to \code{smooth_method}. See help of the functions for the list of parameters.}

\item{alpha.control}{A list containing the controlling parameters for the
alpha optimization steps of the algorithm. See \code{\link{alpha.setup}}.}

\item{algo.control}{A list containing controlling parameters for the
whole algorithm. See \code{\link{algo.setup}}.}

\item{keep.trace}{Logical. If TRUE, the result contains a 'trace' element
giving the intermediate values of alpha coefficients and ridge functions
at each step of the algorithm. Useful for behaviour tracking.}
}
\value{
A \code{cgaim} object, i.e. a list with components:
 \item{alpha}{A named list of index coefficients.}
 \item{gfit}{A matrix containing the ridge and smooth functions 
   evaluated at the observations. Note that column ordering puts indices first and covariates after.}
 \item{indexfit}{A matrix containing the indices evaluated at the 
   observations.}
 \item{beta}{A vector containing the intercept and the scale coefficient
   of each ridge and smooth function. Includes the \eqn{\gamma_{k}} of
   the CGAIM model above. Note that ordering puts indices first and covariates after.}.
 \item{index}{A vector identifying to which index the columns of the
   element \code{x} belong.}
 \item{fitted}{A vector of fitted y values.}
 \item{residuals}{A vector of residuals.}
 \item{rss}{The residual sum of squares of the fit.}
 \item{flag}{A flag indicating how the algorithm stopped. 1 for proper 
   convergence, 2 when the algorithm stopped for lack of step in the
   descent direction and 3 when the maximum number of iterations has
   been reached.}
 \item{trace}{If \code{keep.trace = TRUE}, a tracking list containing,
   for each iteration, values of alpha coefficients, 
   ridge and smooth function, convergence criteria, step length,
   as well as the number of iterations.}
 \item{covariates}{A data.frame containing the values of the variables not 
   entering any index.}
 \item{x}{A matrix containing the variables entering the indices. 
   The variables are mapped to each index throught the element \code{index}.}
 \item{y}{The response vector.}
 \item{weights}{The weights used for estimation.}
 \item{smooth.control}{The controlling parameters passed to the function
   for the smoothing steps.}
 \item{alpha.control}{The controlling parameters passed to the function
   for the alpha update steps.}
 \item{algo.control}{The controlling parameters passed to the function
   for the minimization algorithm.}
 \item{terms}{A \code{\link[stats]{terms.object}} representing the model.
   Useful for prediction.}
}
\description{
Fits a constrained groupwise additive index model (CGAIM) through alternative 
sequential quadratic programming steps.
}
\details{
The CGAIM is expressed 
 \deqn{y_{i} = \beta_{0} + \sum_{j} \beta_{j} g_{j}(\alpha_{j}^{T} x_{ij})
   + \sum_{k} \gamma_{k} f_{k}(x_{ik}) + e_{i}}
 The formula interface considers \code{\link{g}} to identify index terms,
  \code{\link{s}} for smooth functions and can also include 
   linear terms. All smooth terms can be
   shape constrained.

The CGAIM allows for linear constraints on the alpha coefficients. 
 Common constraints can be given for each index through the 
 \code{\link{g}} terms in the formula. Custom constraints, including multi-index constraints can be passed as a matrix through \code{alpha.control$Cmat}. See 
 \code{\link{alpha.setup}}.

The CGAIM is fitted through an iterative algorithm that alternates between
 estimating the ridge functions \eqn{g_{j}} (and other non-index terms) and 
 updating the coefficients \eqn{\alpha_{j}}. The smoothing of ridge functions
 currently supports three methods: \code{\link[scam]{scam}} (the default), \code{\link[cgam]{cgam}} and \code{\link[scar]{scar}}. The list \code{smooth.control} allows controlling the functions.

Updating the coefficient is made through quadratic programming. Currently,
 it is carried out by either the function 
 \code{\link[osqp:solve_osqp]{solve_osqp}} or 
 \code{\link[quadprog:solve.QP]{solve.QP}}. Controlling the updates is
 made through the parameter \code{alpha.control}. See \code{\link{alpha.setup}}
 for the detail.
}
\seealso{
\code{\link{confint.cgaim}} for confidence interval,
   \code{\link{predict.cgaim}} to predict new data,
   \code{\link{plot.cgaim}} to plot ridge function.
}
